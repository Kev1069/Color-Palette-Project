[{"D:\\React\\color-app\\color-app\\src\\index.js":"1","D:\\React\\color-app\\color-app\\src\\reportWebVitals.js":"2","D:\\React\\color-app\\color-app\\src\\App.js":"3","D:\\React\\color-app\\color-app\\src\\seedColors.js":"4","D:\\React\\color-app\\color-app\\src\\Palette.js":"5","D:\\React\\color-app\\color-app\\src\\ColorBox.js":"6","D:\\React\\color-app\\color-app\\src\\colorHelpers.js":"7","D:\\React\\color-app\\color-app\\src\\Navbar.js":"8","D:\\React\\color-app\\color-app\\src\\PaletteList.js":"9","D:\\React\\color-app\\color-app\\src\\MiniPalette.js":"10","D:\\React\\color-app\\color-app\\src\\SingleColorPalette.js":"11","D:\\React\\color-app\\color-app\\src\\PaletteFooter.js":"12","D:\\React\\color-app\\color-app\\src\\styles\\ColorBoxStyles.js":"13","D:\\React\\color-app\\color-app\\src\\styles\\PaletteStyles.js":"14","D:\\React\\color-app\\color-app\\src\\styles\\MiniPaletteStyles.js":"15","D:\\React\\color-app\\color-app\\src\\styles\\PaletteFooterStyles.js":"16","D:\\React\\color-app\\color-app\\src\\styles\\PaletteListStyles.js":"17","D:\\React\\color-app\\color-app\\src\\styles\\NavbarStyles.js":"18","D:\\React\\color-app\\color-app\\src\\NewPaletteForm.js":"19","D:\\React\\color-app\\color-app\\src\\DraggableColorBox.js":"20","D:\\React\\color-app\\color-app\\src\\DraggableColorList.js":"21","D:\\React\\color-app\\color-app\\src\\PaletteFormNav.js":"22","D:\\React\\color-app\\color-app\\src\\ColorPickerForm.js":"23","D:\\React\\color-app\\color-app\\src\\PaletteMetaForm.js":"24","D:\\React\\color-app\\color-app\\src\\styles\\DraggableColorBoxStyles.js":"25","D:\\React\\color-app\\color-app\\src\\styles\\NewPaletteFormStyles.js":"26","D:\\React\\color-app\\color-app\\src\\styles\\PaletteFormNavStyles.js":"27","D:\\React\\color-app\\color-app\\src\\constants.js":"28","D:\\React\\color-app\\color-app\\src\\styles\\ColorPickerFormStyles.js":"29","D:\\React\\color-app\\color-app\\src\\styles\\sizes.js":"30","D:\\React\\color-app\\color-app\\src\\Page.js":"31"},{"size":542,"mtime":1612102512000,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":3968,"mtime":1613910124000,"results":"35","hashOfConfig":"33"},{"size":10042,"mtime":1612862460000,"results":"36","hashOfConfig":"33"},{"size":1338,"mtime":1613293314000,"results":"37","hashOfConfig":"33"},{"size":1767,"mtime":1613909490000,"results":"38","hashOfConfig":"33"},{"size":1297,"mtime":1612021244000,"results":"39","hashOfConfig":"33"},{"size":2549,"mtime":1613909566000,"results":"40","hashOfConfig":"33"},{"size":3763,"mtime":1613909748000,"results":"41","hashOfConfig":"33"},{"size":1473,"mtime":1613910138000,"results":"42","hashOfConfig":"33"},{"size":1784,"mtime":1613909808000,"results":"43","hashOfConfig":"33"},{"size":478,"mtime":1613295394000,"results":"44","hashOfConfig":"33"},{"size":3289,"mtime":1613813658000,"results":"45","hashOfConfig":"33"},{"size":1175,"mtime":1613813650000,"results":"46","hashOfConfig":"33"},{"size":1084,"mtime":1613811302000,"results":"47","hashOfConfig":"33"},{"size":269,"mtime":1613295376000,"results":"48","hashOfConfig":"33"},{"size":1363,"mtime":1613903574000,"results":"49","hashOfConfig":"33"},{"size":1219,"mtime":1613909222000,"results":"50","hashOfConfig":"33"},{"size":5171,"mtime":1613910212000,"results":"51","hashOfConfig":"33"},{"size":727,"mtime":1613808620000,"results":"52","hashOfConfig":"33"},{"size":614,"mtime":1613578280000,"results":"53","hashOfConfig":"33"},{"size":2889,"mtime":1613909662000,"results":"54","hashOfConfig":"33"},{"size":2906,"mtime":1613909930000,"results":"55","hashOfConfig":"33"},{"size":3419,"mtime":1613909796000,"results":"56","hashOfConfig":"33"},{"size":1081,"mtime":1613910016000,"results":"57","hashOfConfig":"33"},{"size":1335,"mtime":1613809582000,"results":"58","hashOfConfig":"33"},{"size":1191,"mtime":1613814738000,"results":"59","hashOfConfig":"33"},{"size":32,"mtime":1613808880000,"results":"60","hashOfConfig":"33"},{"size":294,"mtime":1613808748000,"results":"61","hashOfConfig":"33"},{"size":245,"mtime":1613901450000,"results":"62","hashOfConfig":"33"},{"size":171,"mtime":1613907898000,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1mzhtf",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\color-app\\color-app\\src\\index.js",[],["140","141"],"D:\\React\\color-app\\color-app\\src\\reportWebVitals.js",[],"D:\\React\\color-app\\color-app\\src\\App.js",[],"D:\\React\\color-app\\color-app\\src\\seedColors.js",["142"],"export default [\r\n  {\r\n    paletteName: \"Material UI Colors\",\r\n    id: \"material-ui-colors\",\r\n    emoji: \"ðŸŽ¨\",\r\n    colors: [\r\n      { name: \"red\", color: \"#F44336\" },\r\n      { name: \"pink\", color: \"#E91E63\" },\r\n      { name: \"purple\", color: \"#9C27B0\" },\r\n      { name: \"deeppurple\", color: \"#673AB7\" },\r\n      { name: \"indigo\", color: \"#3F51B5\" },\r\n      { name: \"blue\", color: \"#2196F3\" },\r\n      { name: \"lightblue\", color: \"#03A9F4\" },\r\n      { name: \"cyan\", color: \"#00BCD4\" },\r\n      { name: \"teal\", color: \"#009688\" },\r\n      { name: \"green\", color: \"#4CAF50\" },\r\n      { name: \"lightgreen\", color: \"#8BC34A\" },\r\n      { name: \"lime\", color: \"#CDDC39\" },\r\n      { name: \"yellow\", color: \"#FFEB3B\" },\r\n      { name: \"amber\", color: \"#FFC107\" },\r\n      { name: \"orange\", color: \"#FF9800\" },\r\n      { name: \"deeporange\", color: \"#FF5722\" },\r\n      { name: \"brown\", color: \"#795548\" },\r\n      { name: \"grey\", color: \"#9E9E9E\" },\r\n      { name: \"bluegrey\", color: \"#607D8B\" }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors v1\",\r\n    id: \"flat-ui-colors-v1\",\r\n    emoji: \"ðŸ¤™\",\r\n    colors: [\r\n      { name: \"Turquoise\", color: \"#1abc9c\" },\r\n      { name: \"Emerald\", color: \"#2ecc71\" },\r\n      { name: \"PeterRiver\", color: \"#3498db\" },\r\n      { name: \"Amethyst\", color: \"#9b59b6\" },\r\n      { name: \"WetAsphalt\", color: \"#34495e\" },\r\n      { name: \"GreenSea\", color: \"#16a085\" },\r\n      { name: \"Nephritis\", color: \"#27ae60\" },\r\n      { name: \"BelizeHole\", color: \"#2980b9\" },\r\n      { name: \"Wisteria\", color: \"#8e44ad\" },\r\n      { name: \"MidnightBlue\", color: \"#2c3e50\" },\r\n      { name: \"SunFlower\", color: \"#f1c40f\" },\r\n      { name: \"Carrot\", color: \"#e67e22\" },\r\n      { name: \"Alizarin\", color: \"#e74c3c\" },\r\n      { name: \"Clouds\", color: \"#ecf0f1\" },\r\n      { name: \"Concrete\", color: \"#95a5a6\" },\r\n      { name: \"Orange\", color: \"#f39c12\" },\r\n      { name: \"Pumpkin\", color: \"#d35400\" },\r\n      { name: \"Pomegranate\", color: \"#c0392b\" },\r\n      { name: \"Silver\", color: \"#bdc3c7\" },\r\n      { name: \"Asbestos\", color: \"#7f8c8d\" }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors Dutch\",\r\n    id: \"flat-ui-colors-dutch\",\r\n    emoji: \"ðŸ‡³ðŸ‡±\",\r\n    colors: [\r\n      { name: \"Sunflower\", color: \"#FFC312\" },\r\n      { name: \"Energos\", color: \"#C4E538\" },\r\n      { name: \"BlueMartina\", color: \"#12CBC4\" },\r\n      { name: \"LavenderRose\", color: \"#FDA7DF\" },\r\n      { name: \"BaraRose\", color: \"#ED4C67\" },\r\n      { name: \"RadiantYellow\", color: \"#F79F1F\" },\r\n      { name: \"AndroidGreen\", color: \"#A3CB38\" },\r\n      { name: \"MediterraneanSea\", color: \"#1289A7\" },\r\n      { name: \"LavenderTea\", color: \"#D980FA\" },\r\n      { name: \"VerryBerry\", color: \"#B53471\" },\r\n      { name: \"PuffinsBill\", color: \"#EE5A24\" },\r\n      { name: \"PixelatedGrass\", color: \"#009432\" },\r\n      { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\r\n      { name: \"ForgottenPurple\", color: \"#9980FA\" },\r\n      { name: \"HollyHock\", color: \"#833471\" },\r\n      { name: \"RedPigment\", color: \"#EA2027\" },\r\n      { name: \"TurkishAqua\", color: \"#006266\" },\r\n      { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\r\n      { name: \"CircumorbitalRing\", color: \"#5758BB\" },\r\n      { name: \"MagentaPurple\", color: \"#6F1E51\" }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors American\",\r\n    id: \"flat-ui-colors-american\",\r\n    emoji: \"ðŸ‡ºðŸ‡¸\",\r\n    colors: [\r\n      { name: \"LightGreenishBlue\", color: \"#55efc4\" },\r\n      { name: \"FadedPoster\", color: \"#81ecec\" },\r\n      { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\r\n      { name: \"ShyMoment\", color: \"#a29bfe\" },\r\n      { name: \"CityLights\", color: \"#dfe6e9\" },\r\n      { name: \"MintLeaf\", color: \"#00b894\" },\r\n      { name: \"RobinsEggBlue\", color: \"#00cec9\" },\r\n      { name: \"ElectronBlue\", color: \"#0984e3\" },\r\n      { name: \"ExodusFruit\", color: \"#6c5ce7\" },\r\n      { name: \"SoothingBreeze\", color: \"#b2bec3\" },\r\n      { name: \"SourLemon\", color: \"#ffeaa7\" },\r\n      { name: \"FirstDate\", color: \"#fab1a0\" },\r\n      { name: \"PinkGlamour\", color: \"#ff7675\" },\r\n      { name: \"Pico8Pink\", color: \"#fd79a8\" },\r\n      { name: \"AmericanRiver\", color: \"#636e72\" },\r\n      { name: \"BrightYarrow\", color: \"#fdcb6e\" },\r\n      { name: \"OrangeVille\", color: \"#e17055\" },\r\n      { name: \"Chi-Gong\", color: \"#d63031\" },\r\n      { name: \"PrunusAvium\", color: \"#e84393\" },\r\n      { name: \"DraculaOrchid\", color: \"#2d3436\" }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors Aussie\",\r\n    id: \"flat-ui-colors-aussie\",\r\n    emoji: \"ðŸ‡¦ðŸ‡º\",\r\n    colors: [\r\n      { name: \"Beekeeper\", color: \"#f6e58d\" },\r\n      { name: \"SpicedNectarine\", color: \"#ffbe76\" },\r\n      { name: \"PinkGlamour\", color: \"#ff7979\" },\r\n      { name: \"JuneBud\", color: \"#badc58\" },\r\n      { name: \"CoastalBreeze\", color: \"#dff9fb\" },\r\n      { name: \"Turbo\", color: \"#f9ca24\" },\r\n      { name: \"QuinceJelly\", color: \"#f0932b\" },\r\n      { name: \"CarminePink\", color: \"#eb4d4b\" },\r\n      { name: \"PureApple\", color: \"#6ab04c\" },\r\n      { name: \"HintOfIcePack\", color: \"#c7ecee\" },\r\n      { name: \"MiddleBlue\", color: \"#7ed6df\" },\r\n      { name: \"Heliotrope\", color: \"#e056fd\" },\r\n      { name: \"ExodusFruit\", color: \"#686de0\" },\r\n      { name: \"DeepKoamaru\", color: \"#30336b\" },\r\n      { name: \"SoaringEagle\", color: \"#95afc0\" },\r\n      { name: \"GreenlandGreen\", color: \"#22a6b3\" },\r\n      { name: \"SteelPink\", color: \"#be2edd\" },\r\n      { name: \"Blurple\", color: \"#4834d4\" },\r\n      { name: \"DeepCove\", color: \"#130f40\" },\r\n      { name: \"WizardGrey\", color: \"#535c68\" }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors British\",\r\n    id: \"flat-ui-colors-british\",\r\n    emoji: \"ðŸ‡¬ðŸ‡§\",\r\n    colors: [\r\n      { name: \"ProtossPylon\", color: \"#00a8ff\" },\r\n      { name: \"Periwinkle\", color: \"#9c88ff\" },\r\n      { name: \"Rise-N-Shine\", color: \"#fbc531\" },\r\n      { name: \"DownloadProgress\", color: \"#4cd137\" },\r\n      { name: \"Seabrook\", color: \"#487eb0\" },\r\n      { name: \"VanaDylBlue\", color: \"#0097e6\" },\r\n      { name: \"MattPurple\", color: \"#8c7ae6\" },\r\n      { name: \"NanohanachaGold\", color: \"#e1b12c\" },\r\n      { name: \"SkirretGreen\", color: \"#44bd32\" },\r\n      { name: \"Naval\", color: \"#40739e\" },\r\n      { name: \"NasturcianFlower\", color: \"#e84118\" },\r\n      { name: \"LynxWhite\", color: \"#f5f6fa\" },\r\n      { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\r\n      { name: \"MazarineBlue\", color: \"#273c75\" },\r\n      { name: \"BlueNights\", color: \"#353b48\" },\r\n      { name: \"HarleyOrange\", color: \"#c23616\" },\r\n      { name: \"HintOfPensive\", color: \"#dcdde1\" },\r\n      { name: \"ChainGangGrey\", color: \"#718093\" },\r\n      { name: \"PicoVoid\", color: \"#192a56\" },\r\n      { name: \"ElectroMagnetic\", color: \"#2f3640\" }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors Spanish\",\r\n    id: \"flat-ui-colors-spanish\",\r\n    emoji: \"ðŸ‡ªðŸ‡¸\",\r\n    colors: [\r\n      { name: \"JacksonsPurple\", color: \"#40407a\" },\r\n      { name: \"C64Purple\", color: \"#706fd3\" },\r\n      { name: \"SwanWhite\", color: \"#f7f1e3\" },\r\n      { name: \"SummerSky\", color: \"#34ace0\" },\r\n      { name: \"CelestialGreen\", color: \"#33d9b2\" },\r\n      { name: \"LuckyPoint\", color: \"#2c2c54\" },\r\n      { name: \"Liberty\", color: \"#474787\" },\r\n      { name: \"HotStone\", color: \"#aaa69d\" },\r\n      { name: \"DevilBlue\", color: \"#227093\" },\r\n      { name: \"PalmSpringsSplash\", color: \"#218c74\" },\r\n      { name: \"FlourescentRed\", color: \"#ff5252\" },\r\n      { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\r\n      { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\r\n      { name: \"MandarinSorbet\", color: \"#ffb142\" },\r\n      { name: \"SpicedButterNut\", color: \"#ffda79\" },\r\n      { name: \"EyeOfNewt\", color: \"#b33939\" },\r\n      { name: \"ChileanFire\", color: \"#cd6133\" },\r\n      { name: \"GreyPorcelain\", color: \"#84817a\" },\r\n      { name: \"AlamedaOchre\", color: \"#cc8e35\" },\r\n      { name: \"Desert\", color: \"#ccae62\" }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors Indian\",\r\n    id: \"flat-ui-colors-indian\",\r\n    emoji: \"ðŸ‡®ðŸ‡³\",\r\n    colors: [\r\n      { name: \"OrchidOrange\", color: \"#FEA47F\" },\r\n      { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\r\n      { name: \"HoneyGlow\", color: \"#EAB543\" },\r\n      { name: \"SweetGarden\", color: \"#55E6C1\" },\r\n      { name: \"FallingStar\", color: \"#CAD3C8\" },\r\n      { name: \"RichGardenia\", color: \"#F97F51\" },\r\n      { name: \"ClearChill\", color: \"#1B9CFC\" },\r\n      { name: \"WhitePepper\", color: \"#F8EFBA\" },\r\n      { name: \"Keppel\", color: \"#58B19F\" },\r\n      { name: \"ShipsOfficer\", color: \"#2C3A47\" },\r\n      { name: \"FieryFuchsia\", color: \"#B33771\" },\r\n      { name: \"BlueBell\", color: \"#3B3B98\" },\r\n      { name: \"GeorgiaPeach\", color: \"#FD7272\" },\r\n      { name: \"OasisStream\", color: \"#9AECDB\" },\r\n      { name: \"BrightUbe\", color: \"#D6A2E8\" },\r\n      { name: \"MagentaPurple\", color: \"#6D214F\" },\r\n      { name: \"EndingNavyBlue\", color: \"#182C61\" },\r\n      { name: \"SasquatchSocks\", color: \"#FC427B\" },\r\n      { name: \"PineGlade\", color: \"#BDC581\" },\r\n      { name: \"HighlighterLavender\", color: \"#82589F\" }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors French\",\r\n    id: \"flat-ui-colors-french\",\r\n    emoji: \"ðŸ‡«ðŸ‡·\",\r\n    colors: [\r\n      { name: \"FlatFlesh\", color: \"#fad390\" },\r\n      { name: \"MelonMelody\", color: \"#f8c291\" },\r\n      { name: \"Livid\", color: \"#6a89cc\" },\r\n      { name: \"Spray\", color: \"#82ccdd\" },\r\n      { name: \"ParadiseGreen\", color: \"#b8e994\" },\r\n      { name: \"SquashBlossom\", color: \"#f6b93b\" },\r\n      { name: \"MandarinRed\", color: \"#e55039\" },\r\n      { name: \"AzraqBlue\", color: \"#4a69bd\" },\r\n      { name: \"Dupain\", color: \"#60a3bc\" },\r\n      { name: \"AuroraGreen\", color: \"#78e08f\" },\r\n      { name: \"IcelandPoppy\", color: \"#fa983a\" },\r\n      { name: \"TomatoRed\", color: \"#eb2f06\" },\r\n      { name: \"YueGuangBlue\", color: \"#1e3799\" },\r\n      { name: \"GoodSamaritan\", color: \"#3c6382\" },\r\n      { name: \"Waterfall\", color: \"#38ada9\" },\r\n      { name: \"CarrotOrange\", color: \"#e58e26\" },\r\n      { name: \"JalapenoRed\", color: \"#b71540\" },\r\n      { name: \"DarkSapphire\", color: \"#0c2461\" },\r\n      { name: \"ForestBlues\", color: \"#0a3d62\" },\r\n      { name: \"ReefEncounter\", color: \"#079992\" }\r\n    ]\r\n  }\r\n];\r\n","D:\\React\\color-app\\color-app\\src\\Palette.js",[],"D:\\React\\color-app\\color-app\\src\\ColorBox.js",[],"D:\\React\\color-app\\color-app\\src\\colorHelpers.js",[],"D:\\React\\color-app\\color-app\\src\\Navbar.js",[],"D:\\React\\color-app\\color-app\\src\\PaletteList.js",["143","144"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MiniPalette from \"./MiniPalette\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport styles from \"./styles/PaletteListStyles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nclass PaletteList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openDeleteDialog: false,\r\n      deletingId: \"\"\r\n    };\r\n    this.openDialog = this.openDialog.bind(this);\r\n    this.closeDialog = this.closeDialog.bind(this);\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.goToPalette = this.goToPalette.bind(this);\r\n  }\r\n  openDialog(id) {\r\n    this.setState({ openDeleteDialog: true, deletingId: id });\r\n  }\r\n  closeDialog() {\r\n    this.setState({ openDeleteDialog: false, deletingId: \"\" });\r\n  }\r\n  goToPalette(id){\r\n    this.props.history.push(`/palette/${id}`)\r\n  }\r\n  handleDelete() {\r\n    this.props.deletePalette(this.state.deletingId);\r\n    this.closeDialog();\r\n  }\r\n  render() {\r\n    const { palettes, classes, deletePalette } = this.props;\r\n    const { openDeleteDialog, deletingId } = this.state;\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.container}>\r\n          <nav className={classes.nav}>\r\n          <h1 className={classes.heading}>React Colors</h1>\r\n            <Link to=\"/palette/new\">Create Palette</Link>\r\n          </nav>\r\n          <TransitionGroup className={classes.palettes}>\r\n            {palettes.map(palette => (\r\n              <CSSTransition key={palette.id} classNames='fade' timeout={500}>\r\n                <MiniPalette\r\n                  {...palette}\r\n                  goToPalette={this.goToPalette}\r\n                  // handleDelete={deletePalette}\r\n                  openDialog={this.openDialog}\r\n                  key={palette.id}\r\n                  id={palette.id}\r\n                />\r\n              </CSSTransition>\r\n              \r\n              // <p>\r\n              //   <Link to={`/palette/${palette.id}`}>{palette.paletteName}</Link>\r\n              // </p>\r\n            ))}\r\n          </TransitionGroup>\r\n        </div>\r\n        <Dialog\r\n          open={openDeleteDialog}\r\n          aria-labelledby='delete-dialog-title'\r\n          onClose={this.closeDialog}\r\n        >\r\n          <DialogTitle id='delete-dialog-title'>\r\n            Delete This Palette?\r\n          </DialogTitle>\r\n          <List>\r\n            <ListItem button onClick={this.handleDelete}>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  style={{ backgroundColor: blue[100], color: blue[600] }}\r\n                >\r\n                  <CheckIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary='Delete' />\r\n            </ListItem>\r\n            <ListItem button onClick={this.closeDialog}>\r\n              <ListItemAvatar>\r\n                <Avatar style={{ backgroundColor: red[100], color: red[600] }}>\r\n                  <CloseIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary='Cancel' />\r\n            </ListItem>\r\n          </List>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(PaletteList);","D:\\React\\color-app\\color-app\\src\\MiniPalette.js",[],"D:\\React\\color-app\\color-app\\src\\SingleColorPalette.js",["145"],"import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Navbar from './Navbar';\r\nimport PaletteFooter from './PaletteFooter';\r\nimport ColorBox from \"./ColorBox\";\r\nimport {withStyles} from \"@material-ui/styles\";\r\n\r\nconst styles = {\r\n  Palette: {\r\n    height: \"98vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  colors: {\r\n    height: \"90%\",\r\n  },\r\n  goBack: {\r\n    width: \"20%\",\r\n    height: \"50%\",\r\n    margin: \"0 auto\",\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    marginBottom: \"-3.5px\",\r\n    opcaity: \"1\",\r\n    backgroundColor: \"black\",\r\n    position: \"relative\",\r\n    \"& a\": {\r\n      color: \"white\",\r\n      width: \"100px\",\r\n      height: \"30px\",\r\n      position: \"absolute\",\r\n      display: \"inline-block\",\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      marginLeft: \"-50px\",\r\n      marginTop: \"-15px\",\r\n      textAlign: \"center\",\r\n      outline: \"none\",\r\n      background: \"rgba(255, 255, 255, 0.3)\",\r\n      fontSize: \"1rem\",\r\n      lineHeight: \"30px\",\r\n      textTransform: \"uppercase\",\r\n      border: \"none\",\r\n      textDecoration: \"none\",\r\n    }\r\n  }\r\n};\r\n\r\nclass SingleColorPalette extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this._shades = this.gatherShades(this.props.palette, this.props.colorId);\r\n    this.state = {format: \"hex\"};\r\n    this.changeFormat = this.changeFormat.bind(this);\r\n  }\r\n  gatherShades(palette, colorToFilterBy) {\r\n    let shades = [];\r\n    let allColors = palette.colors;\r\n\r\n    for(let key in allColors) {\r\n      shades = shades.concat(\r\n        allColors[key].filter(color => color.id === colorToFilterBy)\r\n      );\r\n    }\r\n    // return all shades of given color\r\n    return shades.slice(1); // returns everything except first (50)\r\n  }\r\n  changeFormat(val){\r\n    this.setState({format: val});\r\n  }\r\n  render() {\r\n    const {format} = this.state;\r\n    const {paletteName, emoji, id} = this.props.palette;\r\n    const {classes} = this.props;\r\n    const colorBoxes = this._shades.map(color => (\r\n      <ColorBox key={color.name} name={color.name} background={color[format]} showingFullPalette={false} />\r\n    ))\r\n    return (\r\n      <div className={classes.Palette}>\r\n        <Navbar handleChange={this.changeFormat} showingAllColors={false}/>\r\n        <div className={classes.colors}>\r\n          {colorBoxes}\r\n          <div className={classes.goBack}>\r\n          <Link to={`/palette/${id}`}>GO BACK</Link>\r\n          </div>\r\n        </div>\r\n        <PaletteFooter paletteName={paletteName} emoji={emoji}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SingleColorPalette);","D:\\React\\color-app\\color-app\\src\\PaletteFooter.js",[],"D:\\React\\color-app\\color-app\\src\\styles\\ColorBoxStyles.js",["146"],"import chroma from \"chroma-js\";\r\nimport sizes from \"./sizes\";\r\n\r\nexport default {\r\n  colorBox: {\r\n    width: \"20%\",\r\n    height: props => props.showingFullPalette? \"25%\" : \"50%\",\r\n    margin: \"0 auto\",\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    marginBottom: \"-3.5px\",\r\n    \"&:hover button\": {\r\n      opacity: 1\r\n    },\r\n    [sizes.down(\"lg\")]: {\r\n      width: \"25%\",\r\n      height: props => (props.showingFullPalette ? \"20%\" : \"33.3333%\")\r\n    },\r\n    [sizes.down(\"md\")]: {\r\n      width: \"50%\",\r\n      height: props => (props.showingFullPalette ? \"10%\" : \"20%\")\r\n    },\r\n    [sizes.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      height: props => (props.showingFullPalette ? \"5%\" : \"10%\")\r\n    }\r\n  },\r\n  copyText: {\r\n    color: props => chroma(props.background).luminance() >= 0.7 ? \"black\" : \"white\",\r\n  },\r\n  colorName: {\r\n    color: props => chroma(props.background).luminance() <= 0.08 ? \"white\" : \"black\",\r\n  },\r\n  seeMore: {\r\n    color: props => chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.6)\" : \"white\",\r\n    background: \"rgba(255, 255, 255, 0.3)\",\r\n    position: \"absolute\",\r\n    border: \"none\",\r\n    right: \"0px\",\r\n    bottom: \"0px\",\r\n    width: \"60px\",\r\n    height: \"30px\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"30px\",\r\n    textTransform: \"uppercase\"\r\n  },\r\n  copyButton: {\r\n    color: props => chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.6)\" : \"white\",\r\n    width: \"100px\",\r\n    height: \"30px\",\r\n    position: \"absolute\",\r\n    display: \"inline-block\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginLeft: \"-50px\",\r\n    marginTop: \"-15px\",\r\n    textAlign: \"center\",\r\n    outline: \"none\",\r\n    background: \"rgba(255, 255, 255, 0.3)\",\r\n    fontSize: \"1rem\",\r\n    lineHeight: \"30px\",\r\n    textTransform: \"uppercase\",\r\n    border: \"none\",\r\n    textDecoration: \"none\",\r\n    opacity: 0,\r\n  },\r\n  boxContent: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    left: \"0px\",\r\n    bottom: \"0px\",\r\n    padding: \"10px\",\r\n    color: \"black\",\r\n    letterSpacing: \"1px\",\r\n    textTransform: \"uppercase\",\r\n    fontSize: \"12px\",\r\n  },\r\n  copyOverlay: {\r\n    opacity: \"0\",\r\n    zIndex: \"0\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    transition: \"transform 0.6s ease-in-out\",\r\n    transform: \"scale(0.1)\",\r\n  },\r\n  showOverlay: {\r\n    opacity: \"1\",\r\n    transform: \"scale(50)\",\r\n    zIndex: \"10\",\r\n    position: \"absolute\",\r\n  },\r\n  copyMessage: {\r\n    position: \"fixed\",\r\n    left: \"0\",\r\n    right: \"0\",\r\n    top: \"0\",\r\n    bottom: \"0\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    fontSize: \"4rem\",\r\n    transform: \"scale(0.1)\",\r\n    opacity: \"0\",\r\n    color: \"white\",\r\n    \"& h1\": {\r\n      fontWeight: \"400\",\r\n      textShadow: \"1px 2px black\",\r\n      background: \"rgba(255, 255, 255, 0.2)\",\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n      marginBottom: \"0\",\r\n      padding: \"1rem\",\r\n      textTransform: \"uppercase\",\r\n      [sizes.down(\"xs\")]: {\r\n        fontSize: \"6rem\"\r\n      }\r\n    },\r\n    \"$ p\": {\r\n      fontSize: \"2rem\",\r\n      fontWeight: \"100\",\r\n    }\r\n  },\r\n  showMessage: {\r\n    opacity: \"1\",\r\n    transform: \"scale(1)\",\r\n    zIndex: \"25\",\r\n    transition: \"all 0.4s ease-in-out\",\r\n    transitionDelay: \"0.3s\",\r\n  }\r\n};","D:\\React\\color-app\\color-app\\src\\styles\\PaletteStyles.js",["147","148"],"export default {\r\n  Palette: {\r\n    height: \"98vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  colors: {\r\n    height: \"90%\",\r\n  },\r\n  goBack: {\r\n    width: \"20%\",\r\n    height: \"50%\",\r\n    margin: \"0 auto\",\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    marginBottom: \"-3.5px\",\r\n    opcaity: \"1\",\r\n    backgroundColor: \"black\",\r\n    position: \"relative\",\r\n    \"& a\": {\r\n      color: \"white\",\r\n      width: \"100px\",\r\n      height: \"30px\",\r\n      position: \"absolute\",\r\n      display: \"inline-block\",\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      marginLeft: \"-50px\",\r\n      marginTop: \"-15px\",\r\n      textAlign: \"center\",\r\n      outline: \"none\",\r\n      background: \"rgba(255, 255, 255, 0.3)\",\r\n      fontSize: \"1rem\",\r\n      lineHeight: \"30px\",\r\n      textTransform: \"uppercase\",\r\n      border: \"none\",\r\n      textDecoration: \"none\",\r\n    }\r\n  }\r\n};","D:\\React\\color-app\\color-app\\src\\styles\\MiniPaletteStyles.js",["149"],"export default {\r\n  root: {\r\n    backgroundColor: \"white\",\r\n    border: \"1px solid black\",\r\n    borderRadius: \"5px\",\r\n    padding: \"0.5rem\",\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\"\r\n    }\r\n  },\r\n  colors: {\r\n    backgroundColor: \"#dae1e4\",\r\n    height: \"150px\",\r\n    width: \"100%\",\r\n    borderRadius: \"5px\"\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    margin: \"0\",\r\n    color: \"black\",\r\n    paddingTop: \"0.5rem\",\r\n    fontSize: \"1rem\",\r\n    position: \"relative\"\r\n  },\r\n  emoji: {\r\n    marginLeft: \"0.5rem\",\r\n    fontSize: \"1.5rem\"\r\n  },\r\n  miniColor: {\r\n    height: \"25%\",\r\n    width: \"20%\",\r\n    display: \"inline-block\",\r\n    margin: \"0 auto\",\r\n    position: \"relative\",\r\n    marginBottom: \"-3.5px\"\r\n  }\r\n}","D:\\React\\color-app\\color-app\\src\\styles\\PaletteFooterStyles.js",["150"],"export default {\r\n  PaletteFooter: {\r\n    backgroundColor: \"white\",\r\n    height: \"5vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  emoji: {\r\n    fontSize: \"1.5 rem\",\r\n    margin: \"0 1rem\",\r\n  }\r\n}","D:\\React\\color-app\\color-app\\src\\styles\\PaletteListStyles.js",["151","152"],"import sizes from \"./sizes\";\r\nimport bg from \"./bg.svg\";\r\n\r\nexport default {\r\n  root: {\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"center\",\r\n    /* background by SVGBackgrounds.com */\r\n    backgroundColor: \"#394bad\",\r\n    backgroundImage: `url(${bg})`,\r\n    overflow: \"scroll\"\r\n  },\r\n  heading: {\r\n    fontSize: \"2rem\"\r\n  },\r\n  container: {\r\n    width: \"50%\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    flexDirection: \"column\",\r\n    flexWrap: \"wrap\",\r\n    [sizes.down(\"xl\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [sizes.down(\"xs\")]: {\r\n      width: \"75%\"\r\n    }\r\n  },\r\n  nav: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    justifyContent: \"space-between\",\r\n    color: \"white\",\r\n    alignItems: \"center\",\r\n    color: \"white\",\r\n    \"& a\": {\r\n      color: \"white\",\r\n    }\r\n  }, \r\n  palettes: {\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(3, 30%)\",\r\n    gridGap: \"2.5rem\",\r\n    [sizes.down(\"md\")]: {\r\n      gridTemplateColumns: \"repeat(2, 47.5%)\"\r\n    },\r\n    [sizes.down(\"xs\")]: {\r\n      gridTemplateColumns: \"repeat(1, 100%)\",\r\n      gridGap: \"1.4rem\"\r\n    }\r\n  }\r\n};","D:\\React\\color-app\\color-app\\src\\styles\\NavbarStyles.js",["153"],"export default {\r\n  Navbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    height: \"6vh\",\r\n  },\r\n  logo: {\r\n    marginRight: \"15px\",\r\n    padding: \"0 13px\",\r\n    fontSize: \"22px\",\r\n    backgroundColor: \"#eceff1\",\r\n    fontFamily: \"Roboto\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"black\",\r\n    },\r\n  },\r\n  slider: {\r\n    width: \"340px\",\r\n    margin: \"0 10px\",\r\n    display: \"inline-block\",\r\n    \"& .rc-slider-track\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    \"& .rc-slider-rail\": {\r\n      height: \"8px\",\r\n    },\r\n    \"& .rc-slider-handle, .rc-slider-handle:active, .rc-slider-handle:focus, .rc-slider-handle:hover \": {\r\n      backgroundColor: \"green\",\r\n      outline: \"none\",\r\n      border: \"2px solid green\",\r\n      boxShadow: \"none\",\r\n      width: \"13px\",\r\n      height: \"13px\",\r\n      marginLeft: \"-7px\",\r\n      marginTop: \"-3px\",\r\n    },\r\n  },\r\n  selectContainer: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"1rem\",\r\n  }\r\n};","D:\\React\\color-app\\color-app\\src\\NewPaletteForm.js",["154"],"import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PaletteFormNav from \"./PaletteFormNav\";\r\nimport ColorPickerForm from \"./ColorPickerForm\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DraggableColorList from \"./DraggableColorList\";\r\nimport { arrayMove } from \"react-sortable-hoc\";\r\nimport styles from \"./styles/NewPaletteFormStyles\";\r\nimport seedColors from \"./seedColors\";\r\n\r\nclass NewPaletteForm extends Component {\r\n  static defaultProps = {\r\n    maxColors: 20\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: true,\r\n      colors: seedColors[0].colors\r\n    };\r\n    this.addNewColor = this.addNewColor.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.removeColor = this.removeColor.bind(this);\r\n    this.clearColors = this.clearColors.bind(this);\r\n    this.addRandomColor = this.addRandomColor.bind(this);\r\n  }\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  addNewColor(newColor) {\r\n    this.setState({\r\n      colors: [...this.state.colors, newColor],\r\n      newColorName: \"\"\r\n    });\r\n  }\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n  clearColors() {\r\n    this.setState({ colors: [] });\r\n  }\r\n  addRandomColor() {\r\n    const allColors = this.props.palettes.map(p => p.colors).flat();\r\n    let rand;\r\n    let randomColor;\r\n    let isDuplicateColor = true;\r\n    while (isDuplicateColor) {\r\n      rand = Math.floor(Math.random() * allColors.length);\r\n      randomColor = allColors[rand];\r\n      isDuplicateColor = this.state.colors.some(\r\n        color => color.name === randomColor.name\r\n      );\r\n    }\r\n    this.setState({ colors: [...this.state.colors, randomColor] });\r\n  }\r\n  handleSubmit(newPalette) {\r\n    newPalette.id = newPalette.paletteName.toLowerCase().replace(/ /g, \"-\");\r\n    newPalette.colors = this.state.colors;\r\n    this.props.savePalette(newPalette);\r\n    this.props.history.push(\"/\");\r\n  }\r\n  removeColor(colorName) {\r\n    this.setState({\r\n      colors: this.state.colors.filter(color => color.name !== colorName)\r\n    });\r\n  }\r\n  onSortEnd = ({ oldIndex, newIndex }) => {\r\n    this.setState(({ colors }) => ({\r\n      colors: arrayMove(colors, oldIndex, newIndex)\r\n    }));\r\n  };\r\n  render() {\r\n    const { classes, maxColors, palettes } = this.props;\r\n    const { open, colors } = this.state;\r\n    const paletteIsFull = colors.length >= maxColors;\r\n    return (\r\n      <div className={classes.root}>\r\n        <PaletteFormNav\r\n          open={open}\r\n          palettes={palettes}\r\n          handleSubmit={this.handleSubmit}\r\n          handleDrawerOpen={this.handleDrawerOpen}\r\n        />\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant='persistent'\r\n          anchor='left'\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <div className={classes.container}>\r\n            <Typography variant='h4' gutterBottom>\r\n              Design Your Palette\r\n            </Typography>\r\n            <div className={classes.buttons}>\r\n              <Button\r\n                variant='contained'\r\n                color='secondary'\r\n                onClick={this.clearColors}\r\n                className={classes.button}\r\n              >\r\n                Clear Palette\r\n              </Button>\r\n              <Button\r\n                variant='contained'\r\n                className={classes.button}\r\n                color='primary'\r\n                onClick={this.addRandomColor}\r\n                disabled={paletteIsFull}\r\n              >\r\n                Random Color\r\n              </Button>\r\n            </div>\r\n            <div className={classes.pickerForm}>\r\n            <ColorPickerForm\r\n              paletteIsFull={paletteIsFull}\r\n              addNewColor={this.addNewColor}\r\n              colors={colors} \r\n            />\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n        <main\r\n          className={classNames(classes.content, {\r\n            [classes.contentShift]: open\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          <DraggableColorList\r\n            colors={colors}\r\n            removeColor={this.removeColor}\r\n            axis='xy'\r\n            onSortEnd={this.onSortEnd}\r\n            distance={20}\r\n          />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);","D:\\React\\color-app\\color-app\\src\\DraggableColorBox.js",[],"D:\\React\\color-app\\color-app\\src\\DraggableColorList.js",[],"D:\\React\\color-app\\color-app\\src\\PaletteFormNav.js",["155","156","157"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PaletteMetaForm from \"./PaletteMetaForm\";\r\nimport classNames from \"classnames\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styles from \"./styles/PaletteFormNavStyles\";\r\n\r\nclass PaletteFormNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { newPaletteName: \"\", formShowing: false };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.showForm = this.showForm.bind(this);\r\n    this.hideForm = this.hideForm.bind(this);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n\r\n  showForm() {\r\n    this.setState({ formShowing: true });\r\n  }\r\n\r\n  hideForm() {\r\n    this.setState({ formShowing: false });\r\n  }\r\n\r\n  render() {\r\n    const { classes, open, palettes, handleSubmit } = this.props;\r\n    const { newPaletteName } = this.state;\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position='fixed'\r\n          color='default'\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: open\r\n          })}\r\n        >\r\n          <Toolbar disableGutters={!open}>\r\n            <IconButton\r\n              color='inherit'\r\n              aria-label='Open drawer'\r\n              onClick={this.props.handleDrawerOpen}\r\n              className={classNames(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant='h6' color='inherit' noWrap>\r\n              Create A Palette\r\n            </Typography>  \r\n          </Toolbar>\r\n          <div className={classes.navBtns}>\r\n            <Link to='/'>\r\n              <Button variant='contained' color='secondary' className={classes.button} >\r\n                  Go Back\r\n              </Button>\r\n            </Link>\r\n            <Button variant='contained' color='primary' onClick={this.showForm} className={classes.button}>\r\n              Save\r\n            </Button>\r\n            </div>\r\n        </AppBar>\r\n        {this.state.formShowing && (\r\n          <PaletteMetaForm\r\n            palettes={palettes}\r\n            handleSubmit={handleSubmit}\r\n            hideForm={this.hideForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles, { withTheme: true })(PaletteFormNav);","D:\\React\\color-app\\color-app\\src\\ColorPickerForm.js",[],"D:\\React\\color-app\\color-app\\src\\PaletteMetaForm.js",["158"],"import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\n\r\nclass PaletteMetaForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stage: \"form\",\r\n      newPaletteName: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.showEmojiPicker = this.showEmojiPicker.bind(this);\r\n    this.savePalette = this.savePalette.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value =>\r\n      this.props.palettes.every(\r\n        ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\r\n      )\r\n    );\r\n  }\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n\r\n  showEmojiPicker() {\r\n    this.setState({ stage: \"emoji\" });\r\n  }\r\n\r\n  savePalette(emoji) {\r\n    const newPalette = {\r\n      paletteName: this.state.newPaletteName,\r\n      emoji: emoji.native\r\n    };\r\n    this.props.handleSubmit(newPalette);\r\n    this.setState({ stage: \"\" });\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { newPaletteName } = this.state;\r\n    const { hideForm, handleSubmit } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Dialog open={this.state.stage === \"emoji\"} onClose={hideForm}>\r\n          <DialogTitle id='form-dialog-title'>\r\n            Choose a Palette Emoji\r\n          </DialogTitle>\r\n          <Picker title='Pick a Palette Emoji' onSelect={this.savePalette} />\r\n        </Dialog>\r\n        <Dialog\r\n          open={this.state.stage === \"form\"}\r\n          aria-labelledby='form-dialog-title'\r\n          onClose={hideForm}\r\n        >\r\n          <DialogTitle id='form-dialog-title'>\r\n            Choose a Palette Name\r\n          </DialogTitle>\r\n          <ValidatorForm onSubmit={this.showEmojiPicker}>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                Please enter a name for your new beautiful palette. Make sure\r\n                it's unique!\r\n              </DialogContentText>\r\n              <TextValidator\r\n                label='Palette Name'\r\n                value={newPaletteName}\r\n                name='newPaletteName'\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n                margin='normal'\r\n                validators={[\"required\", \"isPaletteNameUnique\"]}\r\n                errorMessages={[\"Enter Palette Name\", \"Name already used\"]}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={hideForm} color='primary'>\r\n                Cancel\r\n              </Button>\r\n              <Button variant='contained' color='primary' type='submit'>\r\n                Save Palette\r\n              </Button>\r\n            </DialogActions>\r\n          </ValidatorForm>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PaletteMetaForm;","D:\\React\\color-app\\color-app\\src\\styles\\DraggableColorBoxStyles.js",[],"D:\\React\\color-app\\color-app\\src\\styles\\NewPaletteFormStyles.js",[],"D:\\React\\color-app\\color-app\\src\\styles\\PaletteFormNavStyles.js",[],"D:\\React\\color-app\\color-app\\src\\constants.js",[],"D:\\React\\color-app\\color-app\\src\\styles\\ColorPickerFormStyles.js",[],"D:\\React\\color-app\\color-app\\src\\styles\\sizes.js",["159"],"export default {\r\n  up() {},\r\n  down(size) {\r\n    const sizes = {\r\n      xs: \"575.98px\",\r\n      sm: \"767.98px\",\r\n      md: \"991.98px\",\r\n      lg: \"1199.98px\"\r\n    };\r\n    return `@media (max-width: ${sizes[size]})`;\r\n  }\r\n};","D:\\React\\color-app\\color-app\\src\\Page.js",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":1,"nodeType":"166","endLine":244,"endColumn":3},{"ruleId":"167","severity":1,"message":"168","line":45,"column":32,"nodeType":"169","messageId":"170","endLine":45,"endColumn":45},{"ruleId":"167","severity":1,"message":"171","line":46,"column":31,"nodeType":"169","messageId":"170","endLine":46,"endColumn":41},{"ruleId":"172","severity":1,"message":"173","line":27,"column":5,"nodeType":"174","messageId":"175","endLine":27,"endColumn":13},{"ruleId":"164","severity":1,"message":"176","line":4,"column":1,"nodeType":"166","endLine":132,"endColumn":3},{"ruleId":"164","severity":1,"message":"176","line":1,"column":1,"nodeType":"166","endLine":41,"endColumn":3},{"ruleId":"172","severity":1,"message":"173","line":20,"column":5,"nodeType":"174","messageId":"175","endLine":20,"endColumn":13},{"ruleId":"164","severity":1,"message":"176","line":1,"column":1,"nodeType":"166","endLine":41,"endColumn":2},{"ruleId":"164","severity":1,"message":"176","line":1,"column":1,"nodeType":"166","endLine":14,"endColumn":2},{"ruleId":"164","severity":1,"message":"176","line":4,"column":1,"nodeType":"166","endLine":56,"endColumn":3},{"ruleId":"172","severity":1,"message":"177","line":37,"column":5,"nodeType":"174","messageId":"175","endLine":37,"endColumn":10},{"ruleId":"164","severity":1,"message":"176","line":1,"column":1,"nodeType":"166","endLine":47,"endColumn":3},{"ruleId":"178","severity":1,"message":"179","line":63,"column":9,"nodeType":"180","messageId":"181","endLine":63,"endColumn":49},{"ruleId":"167","severity":1,"message":"182","line":13,"column":10,"nodeType":"169","messageId":"170","endLine":13,"endColumn":23},{"ruleId":"167","severity":1,"message":"183","line":13,"column":25,"nodeType":"169","messageId":"170","endLine":13,"endColumn":38},{"ruleId":"167","severity":1,"message":"184","line":79,"column":13,"nodeType":"169","messageId":"170","endLine":79,"endColumn":27},{"ruleId":"167","severity":1,"message":"185","line":59,"column":23,"nodeType":"169","messageId":"170","endLine":59,"endColumn":35},{"ruleId":"164","severity":1,"message":"176","line":1,"column":1,"nodeType":"166","endLine":12,"endColumn":3},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'deletePalette' is assigned a value but never used.","Identifier","unusedVar","'deletingId' is assigned a value but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","Assign object to a variable before exporting as module default","Duplicate key 'color'.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'randomColor'.","ArrowFunctionExpression","unsafeRefs","'ValidatorForm' is defined but never used.","'TextValidator' is defined but never used.","'newPaletteName' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]